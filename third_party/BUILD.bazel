load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake", "configure_make")
load("@bazel_skylib//rules:build_test.bzl", "build_test")

package(
    default_visibility = [
        "//visibility:public",
    ],
)

cmake(
    name = "lief",
    cache_entries = {
        "CMAKE_C_FLAGS": "-fPIC",
        "CMAKE_BUILD_TYPE": "RelWithDebInfo",
        "LIEF_PYTHON_API": "off",
        "LIEF_EXAMPLES": "off",
        "LIEF_PE": "off",
        "LIEF_MACHO": "off",
        "LIEF_DEX": "off",
    },
    lib_source = "@lief//:all",
    out_static_libs = ["libLIEF.a"],
    targets = ["LIB_LIEF"],
)

# Add a few tests for third_party software here
build_test(
    name = "third_party_tests",
    targets = [
        "@sqlite3//:shell",
    ],
)

configure_make(
    name = "nasm-build",
    configure_in_place = True,
    configure_options = [
        ## ver.c depends on __DATE__, which makes the
        ## build non-hermetic. Bazel corrects this(?) by setting both to
        ## 'redacted', which is broken because it is not quoted.
        ## This fixes that.
        "CFLAGS='-Dredacted=\"redacted\"'",
    ],
    install_prefix = "bin",
    lib_source = "@nasm//:all",
    linkopts = [
        "-v",
    ],
    out_binaries = [
        "nasm",
    ],
)

filegroup(
    name = "nasm-bin",
    srcs = [":nasm-build"],
    output_group = "nasm",
)

# Wow is this really needed so I can create an executable rule from
# the foreign_rules for configure_make
# bazel run //third_party:nasm -- -help
genrule(
    name = "nasm-binary",
    srcs = [":nasm-bin"],
    outs = ["nasm"],
    cmd = "cp $< $@",
    executable = True,
)
